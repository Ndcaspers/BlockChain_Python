Username: Ndcaspers
Name: Nicholas Caspers

Daily Work Listed

Purpose: Simply messing around with block chaining in python. Specifically, the goal is to create a more "tree" like chain as oppose to a single array/linked-list chain. Additionally, the incorporation of multiple ledgers for kicks and giggles with the users as creators of said chains

Key:
    #, general note for later or for that current day
    -, means a note of want or potential fix
    X, means this bug has been paused, ignored, or abandoned
    *, general accomplishement without an original bug
    -*, accomplished a particular fix or want
    (4 spaces)^, Notes to the record above, should contain specifics
    (4 spaces)^*, Notes to the above record, specifically after a fixed bug
    (xh ym), the amount of time spent on project on a particular day


===11/3/2018===

-* create the blockchain class for a node
-* create the block class maintaining the blocks
-* create the transaction class for maintianing transactions

(5h)

===19/3/2018===

-* add config reading function to the blockchain
-* add a chain owner functionality to the config file
-* provide scaffolding for the three classes
-* setup a main file for testing
-* check initial testing
    ^* so far generics look fine

(1h 30m)

===20/3/2018===

-* look into proof of work ideas
    ^ looking into using four character scheme at the beginning of the hash
    ^ and just varying those characters
-* determine a general plan for the next steps of the project
    ^ need to provide mining endpoints, includes analyzing tree for amount of miners on each empty leaf
    ^ need to provide a wanted proof of work scheme, that can be copied
    ^ need a valid proof of work dont need a mining functionality for the node, but write one anyways
    ^ following this, test the mining capability, block adding, and the transactions
    ^ implement flask
-* add scaffolding to the BlockChain.py public functions (ex: addBlock, addTransaction)
-* fix minor scaffolding issues on BlockChain.py
-* add a coin limit to the configuration parameters

-* impement a valid proof function
-* need to add the hashing key for proofs into the config
-* provide mining endpoints, basically determine the open leafs
-* make sure the blocks are mined in levels
    ^* maybe, most likely not properly enforced
-* provide scaffolding for the minable blocks

-* need to test the endpoints and generic mining
    ^ tested dont work, need to retry
-* includes implementing a basic mining function
    ^* basic mining function seems to work, just issue with the minable blocks

(3h)

===22/3/2018===

-* Create username/password system
    ^ one in mind
    ^* uncertain of its efficency/ability
-* need to fix the minable blocks, they need to point back
    ^ better tree traversal
    ^* not better tree traversal,
    ^* just need to remember minable blocks dont exist as blocks yet

(1h)

===29/3/2018===

-* fixed the fixes to the minable blocks
    ^* might need to throw in some tests
-* add another level of hashing to the user name
-* obtain one of the next blocks
    ^* apparently the first proof is 37076
- need to adjust the difficulty with increase in blocks

(1h)


    

